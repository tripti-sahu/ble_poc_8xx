import { Find } from "./src/drivers/findBy";
import { DateUtils } from "./src/utils/date_utils";
import { AppiumClient } from './src/appiumSide/appiumClient';


import { DatePicker } from "./src/utils/datePicker";
import { UtilsMethod } from "./src/utils/utilsMethod";
import { LoginScreen } from "./src/screens/loginScreen/loginScreen";
import { BleDeviceScreen } from "./src/screens/loginScreen/bleDeviceScreen";
import { BolusInfoScreen } from "./src/screens/loginScreen/bolusInfoScreen";

class PageFactory {   
    datePicker = new DatePicker;
    utilsMethod = new UtilsMethod;
    loginScreen = new LoginScreen;
    bleDeviceScreen = new BleDeviceScreen;
    bolusInfoScreen = new BolusInfoScreen;
}

export class Library {
    public pageFactory: PageFactory;
    public dateUtils = new DateUtils;
    public find = new Find;
    public appiumClient = new AppiumClient;
}

export class Mobile {
    public executeScript(script: string, params: Array): any;
    public session(callback: any): any;
    public launchApp(): any;
    public resetApp(): any;
    public closeApp(): any;
    public forceStopApp(): any;
    public terminateApp(): any;
    public quit(): any;
    public init(): any;
    public wait(s: number): any;
    public ping(ms: number): any;
    public isActive(): any;
    public isLocked(): any;
    public unlockPhone(): any;
    public getElementCoordinatesInPercent(): any;
    public percentToAbsolute(x: string, y: string): any;
    public absoluteToPercent(x: string, y: string): any;
    public flick(xoffset: number, yoffset: number): any;
    public touch(x: any, y: any): any;
    public doubleTap(x: any, y: any): any;
    public swipe(xStart: any, yStart: any, xEnd: any, yEnd: any, speed: any): any;
    public touchAction(): any;
    public element(): any;
    public status(): any;
    public elementById(): any;
    public elementByName(): any;
    public context(): any;
    public contexts(): any;
    public sessionCapabilities(): any;
    public AndroidAppParameters(): any;
    public getWindowSize(): any;
    public getPixelDensity(): any;
    public getOrientation(): any;
    public setOrientation(orientation: any): any;
    public pressKeycode(keycode: any, metastate: any): any;
    public currentContext(): any;
    public waitForElement(): any;
    public waitUntilAppears(): any;
    public waitUntilDisappears(): any;
    public takeScreenshot(): any;
    public findElementBy(): any;
    public findElementByTagName(): any;
    public findElementByCssSelector(): any;
    public findElementByLinkText(): any;
    public findElementByPartialLinkText(): any;
    public findElementByCss(): any;
    public lockDevice(seconds: any): any;
    public lock(seconds: any): any;
    public unlockDevice(): any;
    public unlock(): any;
    public getAttribute(element: any, attrName: string): any;
    public pushFileToDevice(pathOnDevice: any, base64Data: any): any;
    public pushFile(pathOnDevice: any, base64Data: any): any;
    public pull_file(path: string, destPath: string): any;
    public pull_folder(path: string, destPath: string): any;
    public longPress(element: any): any;
    public push_file(path: string, destPath: string): any;
    public sleep(ms: number): any;
    public source(): any;
    public takeSource(path: string): any;
    public isElementExistInSource(locator: any, existingSource: any): any;
    public xpathExecute(xpathExpression: any, existingSource: any): any;
    public getAttributeFromSource(): any;
    public log(logType: any): any;
    public logTypes(): any;
    public hideKeyboard(): any;
    public back(): any;
    public config: any;
    public simulations: any;
    public uiID: any;
    public installAppOnDevice(path: string): any;
    public installApp(path: string): any;
    public isAppInstalledOnDevice(path: string): any;
    public backgroundApp(seconds: number): any;
    public backgroundAppWithActivity(seconds: number, activity: string): any;
    public backgroundAppOverviewBtn(seconds: any): any;
    public foregroundApp(): any;
    public getCurrentPackage(): any;
    public getCurrentActivity(): any;
    public scrollTo(locator: any, up: any, scrollCounter: any): any;
    public isExternalApp(path: string): any;
    public startActivity(activity: string): any;
    public downloadAppLogs(): any;
    public logs(): any;
    public setImplicitWaitTimeout(ms: any): any;
    public AndroidKeys(): any;
    public getBLEGraph(): any;
    public getPhoneUniqueNumber(): any;
    public isPerfectoMobile(): any;
    public isRuningOnPerfecto(): any;
    public setAutoUploadTime(): any;
    public qm_SetGraphDisplayTime(hour: any, poupOpen: any): any;
    public qm_closeNotificationCenter(): any;
    public qm_openNotificationCenter(): any;
    public qm_openQuickSettings(): any;
    public qm_closeQuickSettings(): any;
    public qm_toggleWifi(): any;
    public qm_setWifi(): any;
    public qm_toggleBluetooth(): any;
    public qm_setBluetooth(): any;
    public qm_toggleLocation(): any;
    public qm_setLocation(): any;
    public qm_toggleAirPlaneMode(): any;
    public qm_setAirPlaneMode(): any;
    public qm_deleteBluetoothDevice(DeviceName: any): any;
    public getDeviceDateAndTime(): any;
    public getMobileTime(): any;
    public qm_deletePumpThroughApp(DeviceName: any): any;
    public qm_CloseGraphZoomMenu(): any;
    public getBLETransmitter(): any;
    public BLE_SDK: any;
    public qm_disableNotificationsFromApp(): any;
    public qm_enableNotificationsFromApp(): any;
    public setupMobileTimeForRFLog(onlyhourDiff: any): any;
    public enterRealTime(): any;
    public flutter: any;
}
